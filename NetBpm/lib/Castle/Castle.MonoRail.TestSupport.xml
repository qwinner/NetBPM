<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Castle.MonoRail.TestSupport</name>
    </assembly>
    <members>
        <member name="T:Castle.MonoRail.TestSupport.AbstractMRTestCase">
            <summary>
            Base class for tests cases using the ASP.Net Runtime 
            to run the web project
            </summary>
        </member>
        <member name="M:Castle.MonoRail.TestSupport.AbstractMRTestCase.ReinstateRequest(System.Byte[])">
            <summary>
            Reinstates the request.
            </summary>
            <param name="serializedRequest">The serialized request.</param>
        </member>
        <member name="M:Castle.MonoRail.TestSupport.AbstractMRTestCase.GetSerializedRequest">
            <summary>
            Gets the serialized request.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Castle.MonoRail.TestSupport.AbstractMRTestCase.DoGet(System.String,System.String[])">
            <summary>
            Performs a GET operation on 
            </summary>
            <param name="path">The resource being request, for example <c>home/index.rails</c></param>
            <param name="queryStringParams">A list of key/value pair, for example <c>name=johndoe</c></param>
        </member>
        <member name="M:Castle.MonoRail.TestSupport.AbstractMRTestCase.DoGet(System.String,System.Boolean,System.String[])">
            <summary>
            Performs a GET operation on
            </summary>
            <param name="path">The resource being request, for example <c>home/index.rails</c></param>
            <param name="resendCookies">if set to <c>true</c> [resend cookies].</param>
            <param name="queryStringParams">A list of key/value pair, for example <c>name=johndoe</c></param>
        </member>
        <member name="M:Castle.MonoRail.TestSupport.AbstractMRTestCase.DoPost(System.String,System.String[])">
            <summary>
            Performs a Post operation on 
            </summary>
            <param name="path">The resource being request, for example <c>home/index.rails</c></param>
            <param name="postStringParams">A list of key/value pair, for example <c>name=johndoe</c></param>
        </member>
        <member name="M:Castle.MonoRail.TestSupport.AbstractMRTestCase.DoPost(System.String,System.Boolean,System.String[])">
            <summary>
            Performs a Post operation on
            </summary>
            <param name="path">The resource being request, for example <c>home/index.rails</c></param>
            <param name="resendCookies">if set to <c>true</c> [resend cookies].</param>
            <param name="postStringParams">A list of key/value pair, for example <c>name=johndoe</c></param>
        </member>
        <member name="M:Castle.MonoRail.TestSupport.AbstractMRTestCase.DoHead(System.String,System.String[])">
            <summary>
            Performs a Head operation on 
            </summary>
            <param name="path">The resource being request, for example <c>home/index.rails</c></param>
            <param name="postStringParams">A list of key/value pair, for example <c>name=johndoe</c></param>
        </member>
        <member name="M:Castle.MonoRail.TestSupport.AbstractMRTestCase.AssertResponseNodeCount(System.String,System.Int32)">
            <summary>
            Asserts that the response contains a number of nodes matching an XPath expression.
            </summary>
            <param name="xpathExpression">The xpath expression to match against.</param>
            <param name="numberOfExpectedNodes">The number of expected nodes.</param>
        </member>
        <member name="M:Castle.MonoRail.TestSupport.AbstractMRTestCase.AssertNotRedirectedTo(System.String)">
            <summary>
            Asserts that the response was NOT a redirect to the specified
            <c>url</c> - for example check that your request was not sent to a login screen.
            </summary>
        </member>
        <member name="M:Castle.MonoRail.TestSupport.AbstractMRTestCase.AssertSuccess">
            <summary>
            Asserts the return status code is less than 400
            </summary>
        </member>
        <member name="M:Castle.MonoRail.TestSupport.AbstractMRTestCase.AssertReplyEqualTo(System.String)">
            <summary>
            Asserts that reply has exactly the samme 
            content of <c>expectedContents</c>
            </summary>
            <param name="expectedContents"></param>
        </member>
        <member name="M:Castle.MonoRail.TestSupport.AbstractMRTestCase.AssertReplyStartsWith(System.String)">
            <summary>
            Asserts that reply starts with 
            <c>expectedContents</c>
            </summary>
        </member>
        <member name="M:Castle.MonoRail.TestSupport.AbstractMRTestCase.AssertReplyEndsWith(System.String)">
            <summary>
            Asserts that reply ends with 
            <c>expectedContents</c>
            </summary>
        </member>
        <member name="M:Castle.MonoRail.TestSupport.AbstractMRTestCase.AssertReplyContains(System.String)">
            <summary>
            Asserts that reply contains the specified
            <c>expectedContents</c>
            </summary>
        </member>
        <member name="M:Castle.MonoRail.TestSupport.AbstractMRTestCase.AssertReplyIsBlank">
            <summary>
            Asserts that reply have only whitespace characters
            </summary>
        </member>
        <member name="M:Castle.MonoRail.TestSupport.AbstractMRTestCase.AssertReplyMatch(System.String)">
            <summary>
            Asserts that reply contents match the specified pattern, ignoring any whitespaces
            <c>pattern</c>
            </summary>
        </member>
        <member name="M:Castle.MonoRail.TestSupport.AbstractMRTestCase.AssertReplyMatch(System.String,System.Boolean)">
            <summary>
            Asserts that reply contents match the specified pattern
            <c>pattern</c>
            </summary>
        </member>
        <member name="M:Castle.MonoRail.TestSupport.AbstractMRTestCase.AssertReplyMatch(System.String,System.Boolean,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            Asserts that reply contents match the specified pattern
            <c>pattern</c>
            </summary>
        </member>
        <member name="M:Castle.MonoRail.TestSupport.AbstractMRTestCase.AssertReplyDoesNotContain(System.String)">
            <summary>
            Asserts that reply does not contain
            <c>expectedContents</c>
            </summary>
        </member>
        <member name="M:Castle.MonoRail.TestSupport.AbstractMRTestCase.AssertRedirectedTo(System.String)">
            <summary>
            Asserts that the response was a redirect to the specified
            <c>url</c>
            </summary>
        </member>
        <member name="M:Castle.MonoRail.TestSupport.AbstractMRTestCase.ResendCookies">
            <summary>
            Ensures that cookies (and therefore the session) will persist between requests,
            emulating the behaviour of a genuine web client.
            </summary>
        </member>
        <member name="P:Castle.MonoRail.TestSupport.AbstractMRTestCase.SessionId">
            <summary>
            Returns the sessionId related to the current session
            </summary>
        </member>
        <member name="T:Castle.MonoRail.TestSupport.WebAppHost">
            <summary>
            
            </summary>
        </member>
    </members>
</doc>
